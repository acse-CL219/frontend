{"remainingRequest":"/Users/liuzhaolun/WebstormProjects/Tencent/website/node_modules/babel-loader/lib/index.js!/Users/liuzhaolun/WebstormProjects/Tencent/website/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/liuzhaolun/WebstormProjects/Tencent/website/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/liuzhaolun/WebstormProjects/Tencent/website/src/views/Class.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/liuzhaolun/WebstormProjects/Tencent/website/src/views/Class.vue","mtime":1576552647000},{"path":"/Users/liuzhaolun/WebstormProjects/Tencent/website/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liuzhaolun/WebstormProjects/Tencent/website/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/liuzhaolun/WebstormProjects/Tencent/website/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liuzhaolun/WebstormProjects/Tencent/website/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Class.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n<div>\n  <!-- 第一行 -->\n    <el-row :gutter=\"40\">\n    <!-- 卡片 -->\n    <!-- 基本情况 -->\n      <el-col :span=\"4\" :xs=\"24\"><el-card >\n        <div slot=\"header\" class=\"clearfix\">\n            <span>基本情况</span>\n          </div>\n          <div>{{data.classjbCard.classname}}</div>\n          <div>人数:{{data.classjbCard.students}}</div>\n      </el-card>\n      <!-- 根据在院里排名的建议卡片 -->\n      <el-card>\n        <el-collapse v-model=\"activeNames\" @ change=\"handleChange\">\n     <el-collapse-item title=\"根据在院里的排名，而给你的建议\" name=\"1\">\n       <div>{{proposal}}</div>\n       <div>{{proposal2}}</div>\n      \n     </el-collapse-item>\n   </el-collapse>\n      </el-card>\n      </el-col>\n   <!-- 各个指标测评分的均分 雷达图 -->\n   \n      <el-col :span=\"11\"  :xs=\"24\">\n        <el-card>\n        <v-chart class=\"chart\" ref=\"suchindexscore\"  autoresize></v-chart>\n        <!-- 用ref定义一个变量名字，在下面调用 -->\n        </el-card>\n      </el-col>\n   \n    <!-- 班级名单的表格框 -->\n    \n      <el-col :span=\"9\" :xs=\"24\" >\n        <el-card >\n        <el-table  @row-click=\"intoStudent\" :data=\"peoples\" height=\"400\" style=\"width: 100%\">\n          <!-- 用 @row-click监听点击班级名单所发生的跳转事件,定义peoples变量名用于循环列出班级名单 -->\n          \n          <el-table-column prop=\"name\" label=\"班级同学名单\"></el-table-column>\n          \n        </el-table>\n        </el-card>\n        </el-col>\n    \n  </el-row>\n\n  <!-- 第二行 -->\n   <el-row :gutter=\"40\"  style=\"margin-top: 25px;\" >\n     <!-- 各种关于综合素质的评分 -->\n     <el-col :span=\"4\" :xs=\"20\">\n       <el-card>\n         <div slot=\"header\" class=\"clearfix\">\n           <span>第一学期综合素质均分及排名</span>\n         </div>\n           <div>第一学期综合素质平均分:{{data.classCard1.term1_score}}</div>\n        <div>第一学期在全院排名:{{data.classCard1.term1_paiming}}</div>\n       </el-card>\n       <el-card>\n         <div slot=\"header\" class=\"clearfix\">\n           <span>第二学期综合素质均分及排名</span>\n         </div>\n        <div>第二学期综合素质平均分:{{data.classCard2.term2_score}}</div>\n        <div>第二学期在全院排名:{{data.classCard2.term2_paiming}}</div>\n       </el-card>\n     </el-col>\n     <!-- 下拉框 -->\n     <!-- 各指标或总分的top 柱状图 -->\n     \n     <el-col :span=\"11\" :xs=\"24\" >\n         <el-card>\n       <el-select v-on:change=\"zhibiaochange\" v-model=\"nowIndex\"  clearable placeholder=\"请选择\" style=\"margin-left: 300px;\" size=\"small\"> \n<!-- v-on:change用于改变下拉框指标 v-model用于在更改指标同时改变柱状图的数据 -->\n       <el-option\n       v-for=\"item in options\"\n       :key=\"item.value\"\n       :label=\"item.label\"\n       :value=\"item.value\"></el-option>\n       </el-select>\n       \n       <!-- top5柱状图 -->\n        <v-chart class=\"chart\" ref=\"topstudent\" autoresize ></v-chart>\n        <!-- 用ref定义一个变量名字，在下面调用 -->\n  </el-card>\n       </el-col>\n   \n       <!-- 总分区间漏斗图 -->\n      <el-col :span=\"9\" :xs=\"24\">\n        <el-card body-style=\"padding:36px\" >\n        <v-chart class=\"chart\" ref=\"totalscores\"   autoresize >\n          <!-- 用ref定义一个变量名字，在下面调用 -->\n        </v-chart>\n        </el-card>\n      </el-col>\n     \n   </el-row>\n</div>\n</template>\n\n\n<script>\n import {ClassData} from '../api/testclassdata.js'\n    import {store} from '../store.js'\n    import {EventBus} from '../event-bus.js'\nexport default {\n  name:'banji',\n  beforeRouteEnter(to,from,next){\n    console.log(\"before router enter\")\n    next()\n  },\n  beforeRouteUpdate(){\n    console.log(\"班级导航更新..请求数据\")\n    EventBus.$emit(\"requestData\",\"班级\")\n  },\n  mounted(){\n     let indexs=['思想政治','身心健康','创新创业','技术技能','志愿服务','人文艺术','综合素质理论']//用于建议卡片调用\n      console.log(\"Class mounted\")  \n        EventBus.$on(\"classDataLoad\",data=>{\n          //关闭图表加载\n          this.hideLoad()\n      console.log(\"班级界面请求到数据...\")\n      console.log(data)\n      this.data=data\n      //调用定义的变量\n      this.set_topstudent()\n      this.set_suchindexscore()\n      this.set_studentnames()\n      this.set_topstudent()\n      this.set_totalscores()\n      //通过判断各指标的循环对比得出最低的指标分数给出建议\n      let minIndex=0\n      let temp=this.data.suchindexscores[1].value;\n      console.log(\"判断索引...\")\n      console.log(temp)\n      for(let i=0;i<temp.length-2;i+=1)\n      {\n          if(temp[i]<temp[minIndex])minIndex=i\n      }\n\n      this.proposal2=\"班级\"+indexs[minIndex]+\"指标较低,有待加强\"\n\n      let score=0\n    \n      if(store.state.term===\"term1\")\n      score=this.data.classCard1.term1_score;\n      else\n      score=this.data.classCard2.term2_score;\n      console.log(store.state.term+\"score:\"+score)\n      console.log(this.data.classCard1.term1_score)\n      if (score>=0&&score<=15){\n        this.proposal=\"分数较低需要加强\"\n      }\n      else if (score>15&&score<=30){\n        this.proposal=\"分数一般继续努力\"\n      }\n      else if (score>30&&score<=50){\n        this.proposal=\"分数不错，期待你们班的更好表现\"\n      }\n\n    })\n    this.showLoad()\n    //请求班级数据\n    EventBus.$emit(\"requestData\",\"班级\")\n  \n  },\n  methods:{\n    showLoad(){\n       Object.keys( this.$refs).forEach(key => {\n        this.$refs[key].showLoading()\n      })},\n       hideLoad(){\n        //遍历所有图表组件实例，调用隐藏加载\n       Object.keys( this.$refs).forEach(key => {\n        this.$refs[key].hideLoading()\n      })\n    },\n    //请求学生界面的路由，进入学生个人界面\n    intoStudent(row, column, event){\n   \n      console.log(\"进入学生:\"+row+\" \"+column+\" \"+event)\n      console.log(this.$route);\n         this.$router.push({\n        name:\"student\",\n        params:{\n          studentid:row.name,\n          classid:this.$route.params['classid']\n        }\n      })\n    },\n    //用于柱状图改变指标\n    zhibiaochange(value){\n      console.log(\"改变指标\")\n      console.log(value)\n      this.set_topstudent()\n      \n\n    },\n      handleChange(val){\n      \n    },\n    //设置按学期各指标的雷达图\n    set_suchindexscore()\n    {\n    console.log(\"显示雷达图，当前学期\")\n    //循环对比的出指标的最大值，用于定义雷达的最大临界点\n    let suchindexscores=this.data['suchindexscores']\n    let maxvalue = -1;\n\n      \n      for(let i =0;i<suchindexscores.length;i+=1)\n      {\n        for(let j =0;j<suchindexscores[i].value.length;j+=1)\n        {\n\n      \n          if(suchindexscores[i].value[j]>maxvalue)\n          maxvalue=suchindexscores[i].value[j]\n        }\n      }\n\n   \n    let option={\n      \n          title:{text:`${this.stateStore.termName()} 各指标雷达图`},\n        tooltip:{},\n        legend:{data:['学院指标平均分','班级指标平均分'],right:0},\n        radar:{name:{\n          textStyle:{\n            color:'#000',backgroundColor:'#999',borderRadius:3,padding:[3,5]}},\n            indicator:[{name:'思想政治',max:maxvalue},\n            {name:'身心健康',max:maxvalue},\n            {name:'创新创业',max:maxvalue},\n            {name:'技术技能',max:maxvalue},\n            {name:'志愿服务',max:maxvalue},\n            {name:'人文艺术',max:maxvalue},\n            {name:'综合素质理论',max:maxvalue}\n            ]\n            },\n             \n            series:[{\n              name:'学院指标平均分vs班级指标平均分',\n            type:'radar',\n            data:\nsuchindexscores\n             \n              \n              }]\n\n\n\n    }\n   \n    this.$refs['suchindexscore'].mergeOptions(option)//调用数据写入雷达图\n    \n\n    }, \n    //班级名单\n    //使用for循环，循环写入班级名单\n    set_studentnames(){\n      let student=this.data['students']['student']\n      this.peoples.splice(0,this.peoples.length); \n      for(let i =0;i<student.length;i+=1)\n      this.peoples.push(\n        {\n        name:student[i]\n        }\n        )\n      \n    },\n\n\n\n    // 设置top 学生柱状图\n    set_topstudent()\n    {\n      console.log(\"设置top图表，当前指标是:\"+this.nowIndex)\n      if( Object.keys(this.data['topstudent']).indexOf(this.nowIndex)<0 )\n      {\n        console.log(\"没有这个指标\")\n        return;\n      }\n      let names = this.data['topstudent'][this.nowIndex]['names']\n      let scores = this.data['topstudent'][this.nowIndex]['scores']\n      let option={\n        \n        title:{text:` ${this.stateStore.termName()} 柱状图`},\n       color:['#00E5EE'],\n       tooltip:{trigger:'axis',\n       axisPointer: {\n         type: 'shadow'\n       }\n       },\n       grid:{\n         left:'3%',\n         right:'4%',\n         bottom:'3%',\n         containLabel:true\n       },\n       xAxis:[{\n         type:'category',\n         data:names,\n         axisTick:{\n           alignWithLabel:true\n         }\n       }],\n       yAxis:[{\n         type:'value'\n       }],\n       series:[{\n         name:'分数',\n         type:'bar',\n         barWidth:'60',\n         data:scores\n       }]\n     }\n\n     this.$refs['topstudent'].mergeOptions(option)//调用数据写入柱状图\n    },\n    //总分区间漏斗图\n    set_totalscores()\n    {\n      console.log(\"显示漏斗图，当前学期\")\n      let ranges=this.data['totalscores']['ranges']\n      let allscores=this.data['totalscores']['allscores']\n      let option={\n         title:{text:`${this.stateStore.termName()}总分区间漏斗图`},\n     tooltip:{trigger:'item',\n     fromatter: \"{a} <br/>{b} : {c}%\"},\n     toolbox:{\n       feature:{dataView:{readOnly: false},\n       restore: {},\n       saveAsImage:{}\n       }\n     },\n     \n     legend:{\n       data:ranges,\n       bottom:0\n     },\n     calculable: true,\n     series:[\n       {\n         name: '总分区间图',\n         type:'funnel',\n         left:'20%',\n         top:60,\n         bottom:60,\n         width:'80%',\n         min:0,\n         max:50,\n         minSize:'0%',\n         maxSize:'100%',\n         sort:'descending',\n         gap:2,\n         label:{\n           show:true,\n           position:'inside'\n         },\n         labelLine:{\n           length:10,\n           lineStyle:{\n             width:1,\n             type:'solid'\n           }\n         },\n         itemStyle:{\n           borderColor:'#fff',\n           borderWidth:1\n         },\n         emphasis:{\n           label:{\n             fontSize:20\n           }\n         },\n         data:allscores\n       }\n     ] \n\n\n      }\n      console.log(this.$refs['totalscores'])\n      console.log(option)\n      //this.$refs['totalscores'].setOption (option)\n  \n      this.$refs['totalscores'].mergeOptions(option,false)//调用数据写入漏斗图\n    }\n  },\n\n  data:function(){\n    return{\n        proposal:[],\n        proposal2:\"\",\n        stateStore:store.state,\n        nowIndex:\"总分Top5\",\n        data:ClassData,\n        peoples:[\"渣渣\",\"渣渣辉\"],//班级名单\n       \n      //柱状图改变指标的下拉框\n      options:[{value:'思想政治',label:'思想政治Top5'},\n               {value:'身心健康',label:'身心健康Top5'},\n               {value:'创新创业',label:'创新创业Top5'},\n               {value:'技术技能',label:'技术技能Top5'},\n               {value:'志愿服务',label:'志愿服务Top5'},\n               {value:'人文艺术',label:'人文艺术Top5'},\n               {value:'综合素质理论',label:'综合素质理论Top5'},\n               {value:'总分',label:'总分Top5'}],\n               value:'',\n   \n    activeNames:[1]//建议卡片的监听\n    }\n  }\n\n}\n</script>\n\n<style>\n .el-dropdown-link {\n    cursor: pointer;\n    color: #409EFF;\n  }\n  .el-icon-arrow-down {\n    font-size: 12px;\n  }\n  \n  \n  \n</style>"],"sourceRoot":"src/views"}]}