{"remainingRequest":"/Users/liuzhaolun/WebstormProjects/Tencent/website/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/liuzhaolun/WebstormProjects/Tencent/website/src/views/Login.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/liuzhaolun/WebstormProjects/Tencent/website/src/views/Login.vue","mtime":1595785202841},{"path":"/Users/liuzhaolun/WebstormProjects/Tencent/website/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liuzhaolun/WebstormProjects/Tencent/website/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/liuzhaolun/WebstormProjects/Tencent/website/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/liuzhaolun/WebstormProjects/Tencent/website/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liuzhaolun/WebstormProjects/Tencent/website/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgovKiDpvKDmoIflm77moIfnmoTmlLnlj5ggKi8KaHRtbCxib2R5e2N1cnNvcjp1cmwoJy4uL2ltYWdlcy9tb3VzZS5qcGVnJyksYXV0b30KLyog5a6a5LmJ6IOM5pmv5Zu+5qGIICovCiNsb2dpbnsKICAgIGJhY2tncm91bmQ6IHVybCgiLi4vaW1hZ2VzL2xvZ2luLmpwZyIpOwogICAgYmFja2dyb3VuZC1zaXplOiAxMDAlIDEwMCU7CiAgICBoZWlnaHQ6IDEwMCU7CiAgICBwb3NpdGlvbjogZml4ZWQ7CiAgICBsZWZ0OiAwOwogICAgdG9wOiAwOwogICAgd2lkdGg6IDEwMCUKfQo="},{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6KA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Login.vue","sourceRoot":"src/views","sourcesContent":["<template>\n\n    <div id=login>\n        <el-row type=\"flex\" justify=\"center\">\n            <el-col   :span=\"5\" :xs=\"20\" style=\"margin-top: 200px\" >\n            <el-form :model=\"login\" :rules=\"rules\" ref=\"loginForm\" size=\"medium\">\n                <el-form-item :error=\"errors.username\" label=\"用户名\" prop=\"username\" >\n                    <el-input v-model=\"login.username\" ></el-input>\n                </el-form-item>\n\n                <el-form-item :error=\"errors.password\" label=\"密码\" prop=\"password\">\n                    <el-input v-model=\"login.password\"  show-password></el-input>\n                </el-form-item>\n                <el-form-item>\n                    <el-button  v-on:click=\"submitLogin\" size=\"medium\">立即登录</el-button>\n                </el-form-item>\n                <a  href=\"#\" @click=\"register()\">没有账号?</a>\n            </el-form>\n       \n        </el-col>\n        </el-row>\n    </div>\n    \n</template>\n\n<script>\n\nimport {apiLogin,apiYears} from '../api/api.js'\n\n//引入event-bus\nimport {EventBus} from '../event-bus.js'\nimport { Loading } from \"element-ui\";\nexport default {\n    \n    name:\"login\",\n    mounted(){\n     \n\n    },\n    beforeRouteUpdate(){\n  \n    },\n    created(){\n        console.log(\"create....\")\n        EventBus.$on(\"showLogin\",()=>{\n            this.isShow=true\n        })\n        console.log(\"发送隐藏\")\n      EventBus.$emit('hideLogo',false);  \n    },//用于隐藏logo的选择框\n    data(){\n        return {\n            //设置错误的显示信息，不定义也可以显示，但登录失败返回的信息要手动设置，所有要指定才能设置\n            errors:{\n                username:\"\",\n                password:\"\"\n            },\n        // 定义表单的规则\n        rules:{\n            username:[\n                {required:true,message:\"请输入用户名\", trigger: 'blur'}\n            ],\n            password:[\n                {required:true,message:\"请输入密码\", trigger: 'blur'},\n                {min:8,max:16,message:\"长度为8到16位\", trigger: 'blur'   }\n            ]\n        },\n\n        isShow:true,\n        //设置登录的表单，对应el-table里的model属性\n        login:{\n        //  username:\"jojo\",   \n        //  password:\"jojojojo\"\n        }\n\n        }\n    },\n    methods:{\n        register(){\n            this.$router.replace({name:'register'})\n        },\n        \n        startLogin(){\n            Loading.service({ text: \"正在登录....\", fullscreen: true });\n             apiLogin({\n                username:this.login.username,\n                password:this.login.password\n            }).then(res=>{\n                Loading.service({ fullscreen: true }).close();\n                console.log(\"请求成功\")\n                console.log(res)\n                this.isShow=false\n                // 登录成功，跳转到首页\n                //this.$router.push(\"college\")\n                if(res.code==0)\n                {\n                    this.$message({\n                    type:\"success\",\n                    message:\"登录成功，正在跳转到页面\"\n                })\n               this.$router.push({name:\"data\"})\n                }\n                else{\n                    console.log(\"登录返回非0\")\n                    let data=res.data;\n                    console.log(data)\n                        if(data.username !== undefined)\n               {\n                     let temp = data.username.join(\",\");\n                    if(temp.indexOf('Invalid username')!=-1)\n                    this.errors.username=\"无效的用户名\"\n               }\n                 if(data.password !== undefined)\n                  {\n                     //转换成中文\n                    let temp = data.password.join(\",\");\n                    console.log(temp)\n                    if(temp.indexOf(\"Incorrect password!\")!=-1)\n                        this.errors.password=\"密码错误!\"\n                 }\n                }\n             \n               \n                //保存cookes\n            }).catch(err=>{\n                Loading.service({ fullscreen: true }).close();\n                console.log(\"请求失败\")\n                console.log(err)\n                 let data = err.response.data\n                 if(err.response.status==403)\n                this.$message({\n                    type:\"error\",\n                    message:\"登录,请检查用户名或密码\"\n                })\n                else{\n                  this.$message({\n                    type:\"error\",\n                    message:\"登录失败,请检查网络连接\"\n                })  \n                }\n\n\n            })\n        },\n        //打开登录按钮\n        openLogin(){\n            this.isShow=true\n        },\n        submitLogin(){\n            console.log(\"提交登录....\")\n            this.$refs['loginForm'].validate((valid)=>{\n                if(valid)\n                {\n                    //表单规则验证成功，开始登录\n                    this.startLogin()\n                }\n                else\n                {\n                    //表单验证失败\n                }\n            })\n           \n\n\n\n\n        }\n    }\n\n}\n</script>\n\n<style>\n/* 鼠标图标的改变 */\nhtml,body{cursor:url('../images/mouse.jpeg'),auto}\n/* 定义背景图案 */\n#login{\n    background: url(\"../images/login.jpg\");\n    background-size: 100% 100%;\n    height: 100%;\n    position: fixed;\n    left: 0;\n    top: 0;\n    width: 100%\n}\n</style>"]}]}