{"remainingRequest":"/Users/liuzhaolun/WebstormProjects/Tencent/website/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/liuzhaolun/WebstormProjects/Tencent/website/src/views/Class.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/liuzhaolun/WebstormProjects/Tencent/website/src/views/Class.vue","mtime":1576552647000},{"path":"/Users/liuzhaolun/WebstormProjects/Tencent/website/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liuzhaolun/WebstormProjects/Tencent/website/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/liuzhaolun/WebstormProjects/Tencent/website/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/liuzhaolun/WebstormProjects/Tencent/website/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liuzhaolun/WebstormProjects/Tencent/website/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmVsLWRyb3Bkb3duLWxpbmsgewogICBjdXJzb3I6IHBvaW50ZXI7CiAgIGNvbG9yOiAjNDA5RUZGOwogfQogLmVsLWljb24tYXJyb3ctZG93biB7CiAgIGZvbnQtc2l6ZTogMTJweDsKIH0KIAogCiAK"},{"version":3,"sources":["Class.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiaA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Class.vue","sourceRoot":"src/views","sourcesContent":["<template>\n<div>\n  <!-- 第一行 -->\n    <el-row :gutter=\"40\">\n    <!-- 卡片 -->\n    <!-- 基本情况 -->\n      <el-col :span=\"4\" :xs=\"24\"><el-card >\n        <div slot=\"header\" class=\"clearfix\">\n            <span>基本情况</span>\n          </div>\n          <div>{{data.classjbCard.classname}}</div>\n          <div>人数:{{data.classjbCard.students}}</div>\n      </el-card>\n      <!-- 根据在院里排名的建议卡片 -->\n      <el-card>\n        <el-collapse v-model=\"activeNames\" @ change=\"handleChange\">\n     <el-collapse-item title=\"根据在院里的排名，而给你的建议\" name=\"1\">\n       <div>{{proposal}}</div>\n       <div>{{proposal2}}</div>\n      \n     </el-collapse-item>\n   </el-collapse>\n      </el-card>\n      </el-col>\n   <!-- 各个指标测评分的均分 雷达图 -->\n   \n      <el-col :span=\"11\"  :xs=\"24\">\n        <el-card>\n        <v-chart class=\"chart\" ref=\"suchindexscore\"  autoresize></v-chart>\n        <!-- 用ref定义一个变量名字，在下面调用 -->\n        </el-card>\n      </el-col>\n   \n    <!-- 班级名单的表格框 -->\n    \n      <el-col :span=\"9\" :xs=\"24\" >\n        <el-card >\n        <el-table  @row-click=\"intoStudent\" :data=\"peoples\" height=\"400\" style=\"width: 100%\">\n          <!-- 用 @row-click监听点击班级名单所发生的跳转事件,定义peoples变量名用于循环列出班级名单 -->\n          \n          <el-table-column prop=\"name\" label=\"班级同学名单\"></el-table-column>\n          \n        </el-table>\n        </el-card>\n        </el-col>\n    \n  </el-row>\n\n  <!-- 第二行 -->\n   <el-row :gutter=\"40\"  style=\"margin-top: 25px;\" >\n     <!-- 各种关于综合素质的评分 -->\n     <el-col :span=\"4\" :xs=\"20\">\n       <el-card>\n         <div slot=\"header\" class=\"clearfix\">\n           <span>第一学期综合素质均分及排名</span>\n         </div>\n           <div>第一学期综合素质平均分:{{data.classCard1.term1_score}}</div>\n        <div>第一学期在全院排名:{{data.classCard1.term1_paiming}}</div>\n       </el-card>\n       <el-card>\n         <div slot=\"header\" class=\"clearfix\">\n           <span>第二学期综合素质均分及排名</span>\n         </div>\n        <div>第二学期综合素质平均分:{{data.classCard2.term2_score}}</div>\n        <div>第二学期在全院排名:{{data.classCard2.term2_paiming}}</div>\n       </el-card>\n     </el-col>\n     <!-- 下拉框 -->\n     <!-- 各指标或总分的top 柱状图 -->\n     \n     <el-col :span=\"11\" :xs=\"24\" >\n         <el-card>\n       <el-select v-on:change=\"zhibiaochange\" v-model=\"nowIndex\"  clearable placeholder=\"请选择\" style=\"margin-left: 300px;\" size=\"small\"> \n<!-- v-on:change用于改变下拉框指标 v-model用于在更改指标同时改变柱状图的数据 -->\n       <el-option\n       v-for=\"item in options\"\n       :key=\"item.value\"\n       :label=\"item.label\"\n       :value=\"item.value\"></el-option>\n       </el-select>\n       \n       <!-- top5柱状图 -->\n        <v-chart class=\"chart\" ref=\"topstudent\" autoresize ></v-chart>\n        <!-- 用ref定义一个变量名字，在下面调用 -->\n  </el-card>\n       </el-col>\n   \n       <!-- 总分区间漏斗图 -->\n      <el-col :span=\"9\" :xs=\"24\">\n        <el-card body-style=\"padding:36px\" >\n        <v-chart class=\"chart\" ref=\"totalscores\"   autoresize >\n          <!-- 用ref定义一个变量名字，在下面调用 -->\n        </v-chart>\n        </el-card>\n      </el-col>\n     \n   </el-row>\n</div>\n</template>\n\n\n<script>\n import {ClassData} from '../api/testclassdata.js'\n    import {store} from '../store.js'\n    import {EventBus} from '../event-bus.js'\nexport default {\n  name:'banji',\n  beforeRouteEnter(to,from,next){\n    console.log(\"before router enter\")\n    next()\n  },\n  beforeRouteUpdate(){\n    console.log(\"班级导航更新..请求数据\")\n    EventBus.$emit(\"requestData\",\"班级\")\n  },\n  mounted(){\n     let indexs=['思想政治','身心健康','创新创业','技术技能','志愿服务','人文艺术','综合素质理论']//用于建议卡片调用\n      console.log(\"Class mounted\")  \n        EventBus.$on(\"classDataLoad\",data=>{\n          //关闭图表加载\n          this.hideLoad()\n      console.log(\"班级界面请求到数据...\")\n      console.log(data)\n      this.data=data\n      //调用定义的变量\n      this.set_topstudent()\n      this.set_suchindexscore()\n      this.set_studentnames()\n      this.set_topstudent()\n      this.set_totalscores()\n      //通过判断各指标的循环对比得出最低的指标分数给出建议\n      let minIndex=0\n      let temp=this.data.suchindexscores[1].value;\n      console.log(\"判断索引...\")\n      console.log(temp)\n      for(let i=0;i<temp.length-2;i+=1)\n      {\n          if(temp[i]<temp[minIndex])minIndex=i\n      }\n\n      this.proposal2=\"班级\"+indexs[minIndex]+\"指标较低,有待加强\"\n\n      let score=0\n    \n      if(store.state.term===\"term1\")\n      score=this.data.classCard1.term1_score;\n      else\n      score=this.data.classCard2.term2_score;\n      console.log(store.state.term+\"score:\"+score)\n      console.log(this.data.classCard1.term1_score)\n      if (score>=0&&score<=15){\n        this.proposal=\"分数较低需要加强\"\n      }\n      else if (score>15&&score<=30){\n        this.proposal=\"分数一般继续努力\"\n      }\n      else if (score>30&&score<=50){\n        this.proposal=\"分数不错，期待你们班的更好表现\"\n      }\n\n    })\n    this.showLoad()\n    //请求班级数据\n    EventBus.$emit(\"requestData\",\"班级\")\n  \n  },\n  methods:{\n    showLoad(){\n       Object.keys( this.$refs).forEach(key => {\n        this.$refs[key].showLoading()\n      })},\n       hideLoad(){\n        //遍历所有图表组件实例，调用隐藏加载\n       Object.keys( this.$refs).forEach(key => {\n        this.$refs[key].hideLoading()\n      })\n    },\n    //请求学生界面的路由，进入学生个人界面\n    intoStudent(row, column, event){\n   \n      console.log(\"进入学生:\"+row+\" \"+column+\" \"+event)\n      console.log(this.$route);\n         this.$router.push({\n        name:\"student\",\n        params:{\n          studentid:row.name,\n          classid:this.$route.params['classid']\n        }\n      })\n    },\n    //用于柱状图改变指标\n    zhibiaochange(value){\n      console.log(\"改变指标\")\n      console.log(value)\n      this.set_topstudent()\n      \n\n    },\n      handleChange(val){\n      \n    },\n    //设置按学期各指标的雷达图\n    set_suchindexscore()\n    {\n    console.log(\"显示雷达图，当前学期\")\n    //循环对比的出指标的最大值，用于定义雷达的最大临界点\n    let suchindexscores=this.data['suchindexscores']\n    let maxvalue = -1;\n\n      \n      for(let i =0;i<suchindexscores.length;i+=1)\n      {\n        for(let j =0;j<suchindexscores[i].value.length;j+=1)\n        {\n\n      \n          if(suchindexscores[i].value[j]>maxvalue)\n          maxvalue=suchindexscores[i].value[j]\n        }\n      }\n\n   \n    let option={\n      \n          title:{text:`${this.stateStore.termName()} 各指标雷达图`},\n        tooltip:{},\n        legend:{data:['学院指标平均分','班级指标平均分'],right:0},\n        radar:{name:{\n          textStyle:{\n            color:'#000',backgroundColor:'#999',borderRadius:3,padding:[3,5]}},\n            indicator:[{name:'思想政治',max:maxvalue},\n            {name:'身心健康',max:maxvalue},\n            {name:'创新创业',max:maxvalue},\n            {name:'技术技能',max:maxvalue},\n            {name:'志愿服务',max:maxvalue},\n            {name:'人文艺术',max:maxvalue},\n            {name:'综合素质理论',max:maxvalue}\n            ]\n            },\n             \n            series:[{\n              name:'学院指标平均分vs班级指标平均分',\n            type:'radar',\n            data:\nsuchindexscores\n             \n              \n              }]\n\n\n\n    }\n   \n    this.$refs['suchindexscore'].mergeOptions(option)//调用数据写入雷达图\n    \n\n    }, \n    //班级名单\n    //使用for循环，循环写入班级名单\n    set_studentnames(){\n      let student=this.data['students']['student']\n      this.peoples.splice(0,this.peoples.length); \n      for(let i =0;i<student.length;i+=1)\n      this.peoples.push(\n        {\n        name:student[i]\n        }\n        )\n      \n    },\n\n\n\n    // 设置top 学生柱状图\n    set_topstudent()\n    {\n      console.log(\"设置top图表，当前指标是:\"+this.nowIndex)\n      if( Object.keys(this.data['topstudent']).indexOf(this.nowIndex)<0 )\n      {\n        console.log(\"没有这个指标\")\n        return;\n      }\n      let names = this.data['topstudent'][this.nowIndex]['names']\n      let scores = this.data['topstudent'][this.nowIndex]['scores']\n      let option={\n        \n        title:{text:` ${this.stateStore.termName()} 柱状图`},\n       color:['#00E5EE'],\n       tooltip:{trigger:'axis',\n       axisPointer: {\n         type: 'shadow'\n       }\n       },\n       grid:{\n         left:'3%',\n         right:'4%',\n         bottom:'3%',\n         containLabel:true\n       },\n       xAxis:[{\n         type:'category',\n         data:names,\n         axisTick:{\n           alignWithLabel:true\n         }\n       }],\n       yAxis:[{\n         type:'value'\n       }],\n       series:[{\n         name:'分数',\n         type:'bar',\n         barWidth:'60',\n         data:scores\n       }]\n     }\n\n     this.$refs['topstudent'].mergeOptions(option)//调用数据写入柱状图\n    },\n    //总分区间漏斗图\n    set_totalscores()\n    {\n      console.log(\"显示漏斗图，当前学期\")\n      let ranges=this.data['totalscores']['ranges']\n      let allscores=this.data['totalscores']['allscores']\n      let option={\n         title:{text:`${this.stateStore.termName()}总分区间漏斗图`},\n     tooltip:{trigger:'item',\n     fromatter: \"{a} <br/>{b} : {c}%\"},\n     toolbox:{\n       feature:{dataView:{readOnly: false},\n       restore: {},\n       saveAsImage:{}\n       }\n     },\n     \n     legend:{\n       data:ranges,\n       bottom:0\n     },\n     calculable: true,\n     series:[\n       {\n         name: '总分区间图',\n         type:'funnel',\n         left:'20%',\n         top:60,\n         bottom:60,\n         width:'80%',\n         min:0,\n         max:50,\n         minSize:'0%',\n         maxSize:'100%',\n         sort:'descending',\n         gap:2,\n         label:{\n           show:true,\n           position:'inside'\n         },\n         labelLine:{\n           length:10,\n           lineStyle:{\n             width:1,\n             type:'solid'\n           }\n         },\n         itemStyle:{\n           borderColor:'#fff',\n           borderWidth:1\n         },\n         emphasis:{\n           label:{\n             fontSize:20\n           }\n         },\n         data:allscores\n       }\n     ] \n\n\n      }\n      console.log(this.$refs['totalscores'])\n      console.log(option)\n      //this.$refs['totalscores'].setOption (option)\n  \n      this.$refs['totalscores'].mergeOptions(option,false)//调用数据写入漏斗图\n    }\n  },\n\n  data:function(){\n    return{\n        proposal:[],\n        proposal2:\"\",\n        stateStore:store.state,\n        nowIndex:\"总分Top5\",\n        data:ClassData,\n        peoples:[\"渣渣\",\"渣渣辉\"],//班级名单\n       \n      //柱状图改变指标的下拉框\n      options:[{value:'思想政治',label:'思想政治Top5'},\n               {value:'身心健康',label:'身心健康Top5'},\n               {value:'创新创业',label:'创新创业Top5'},\n               {value:'技术技能',label:'技术技能Top5'},\n               {value:'志愿服务',label:'志愿服务Top5'},\n               {value:'人文艺术',label:'人文艺术Top5'},\n               {value:'综合素质理论',label:'综合素质理论Top5'},\n               {value:'总分',label:'总分Top5'}],\n               value:'',\n   \n    activeNames:[1]//建议卡片的监听\n    }\n  }\n\n}\n</script>\n\n<style>\n .el-dropdown-link {\n    cursor: pointer;\n    color: #409EFF;\n  }\n  .el-icon-arrow-down {\n    font-size: 12px;\n  }\n  \n  \n  \n</style>"]}]}