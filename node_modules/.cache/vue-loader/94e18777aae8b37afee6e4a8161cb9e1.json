{"remainingRequest":"/Users/liuzhaolun/WebstormProjects/Tencent/website/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/liuzhaolun/WebstormProjects/Tencent/website/src/views/College.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/liuzhaolun/WebstormProjects/Tencent/website/src/views/College.vue","mtime":1576552647000},{"path":"/Users/liuzhaolun/WebstormProjects/Tencent/website/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liuzhaolun/WebstormProjects/Tencent/website/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/liuzhaolun/WebstormProjects/Tencent/website/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liuzhaolun/WebstormProjects/Tencent/website/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["College.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"College.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div>\n\n    <!-- 第一行 -->\n    <el-row :gutter=\"40\" >\n      <!-- 卡片 -->\n      <el-col :span=\"5\" :xs=\"24\" >\n          <!-- cardtext设置 文字的样式-->\n            <el-card body-style=\"padding:26px\">\n          <div slot=\"header\">\n            <span>{{this.stateStore.year}}年度总平均分</span>\n          </div>\n          <div class=\"cardtext\">{{data.basicCard.year_score}}</div>\n        </el-card >\n        <el-card body-style=\"padding:26px\">\n          <div slot=\"header\">\n            <span>{{this.stateStore.year}}年度第一学期平均分</span>\n          </div>\n          <div class=\"cardtext\">{{data.basicCard.term1_score}}</div>\n        </el-card>\n          <el-card body-style=\"padding:26px\">\n          <div slot=\"header\">\n            <span>{{this.stateStore.year}}年度第二学期平均分</span>\n          </div>\n          <div class=\"cardtext\">{{data.basicCard.term2_score}}</div>\n        </el-card>\n  \n        \n        \n        <!-- 设置顶部那个20px  -->\n        <!-- <el-card style=\"margin-top: 20px\">\n          <div slot=\"header\" class=\"clearfix\">\n            <span>其他情况</span>\n          </div>\n          <div>1</div>\n          <div> 2 </div>\n        </el-card> -->\n      </el-col>\n        <!-- 饼图 -->\n        \n      <el-col :span=\"8\" :xs=\"24\">\n        <el-card>\n          <!-- tooltip 设置鼠标在元素上时显示帮助信息 -->\n           <el-tooltip class=\"item\" effect=\"dark\" content=\"点击饼图块切换不同指标的数据\" placement=\"bottom\">\n      <v-chart  class=\"chart\" autoresize  ref=\"index\" v-on:pieselectchanged=\"indexChange\"></v-chart>\n    </el-tooltip>\n        </el-card>\n      </el-col>\n      <!-- 1.2 top5柱状图  -->\n      <el-col :span=\"11\" :xs=\"24\" >\n         <el-card>\n        <v-chart  @click=\"intoClass\" class=\"chart\" ref=\"classtop\" autoresize ></v-chart>\n         </el-card>\n      </el-col>\n    </el-row>\n\n    <!-- 第二行 -->\n    <el-row :gutter=\"40\" style=\"margin-top: 25px;\">  \n      <!-- top 50表格  -->\n      <el-col :span=\"5\" :xs=\"24\">\n         <el-card body-style=\"padding:12px\">\n        <div style=\"text-align:center;font-weight:bold\">{{this.stateStore.year}} 年度 {{this.stateStore.termName()}} {{this.nowIndex}} TOP50 学生</div>\n        <el-table :data=\"studenttop50\" height=\"400\">\n        <el-table-column type=\"index\" width=\"50\"></el-table-column>\n        <el-table-column property=\"name\" label=\"姓名\"></el-table-column>\n        <el-table-column property=\"score\" label=\"分数\"></el-table-column>\n      </el-table>\n       </el-card>\n      </el-col>\n      \n      <!-- 分数分布柱状图 -->\n      <el-col  :span=\"8\" :xs=\"24\">\n         <el-card body-style=\"padding:30px\">\n        <v-chart class=\"chart\" ref=\"range\" autoresize ></v-chart>\n         </el-card>\n      </el-col>\n<!-- 散点图 -->\n      <el-col :span=\"11\" :xs=\"24\">\n        <el-card body-style=\"padding:30px\">\n          <v-chart class=\"chart\"  ref=\"gpa_score\" autoresize > </v-chart>\n        </el-card>\n        \n      </el-col>\n    </el-row>\n\n\n\n    <!-- 第三行 -->\n    <el-row :gutter=\"15\" style=\"margin-top: 25px;\" >\n\n      <!-- 各学年变化趋势 -->\n      <el-col :span=\"13\" :xs=\"24\">\n        <el-card>\n        <v-chart  ref=\"trend\" class=\"chart\" autoresize > </v-chart>\n         </el-card>\n      </el-col>\n\n    </el-row>\n\n\n  </div>\n</template>\n\n\n<script>\n// 学院界面\nimport {store} from '../store.js'\nimport {EventBus} from '../event-bus.js'\nimport {college} from '../api/testdata.js'\nexport default {\n  //vue生命周期函数\n  //组件创建时\n  created(){\n\n  \n  },\n  // 组件挂载了\n  mounted(){\n    console.log(\"挂载 mounted...\")\n    \n    //监听 请求到数据后，将数据设置到页面上\n    EventBus.$on(\"collegeDataLoad\",data=>{\n      console.log(\"学院界面请求到数据...\")\n      // 保存数据\n      this.data=data\n      // 设置饼图的初始化指标，其他跟他联动的图一开始也是平均分这个指标，点击就切换成其他的\n      this.nowIndex='平均分'\n      // 设置指标饼图\n      this.setIndex()\n      // 设置top的班级\n      this.set_classtop()\n      // 设置gpa散点图\n      this.set_gpa_score()\n      // 设置分数范围\n      this.set_range()\n      // 设置趋势\n      this.set_trend()\n      //隐藏所有图表的加载动画\n      this.hideLoad()\n      \n    })\n\n  //显示加载数据和初始化图表\n  this.showLoad()\n  //发送请求给Logo组件，请求学院数据,请求响应后再上面的监听里可用监听\n  EventBus.$emit(\"requestData\",\"学院\")\n  },\n  name: \"College\",\n  methods:{\n    //柱状图点击进入班级事件\n    intoClass(params){\n      console.log(\"进入班级..\")\n    // 传递班级的名字作为参数\n    this.$router.push({\n        name:\"class\",\n        params:{\n          classid:params.name,\n          collegeid:\"大数据与人工智能学院\"\n\n        }\n      })\n\n    },\n    //调用加载\n    showLoad(){\n       Object.keys( this.$refs).forEach(key => {\n        this.$refs[key].showLoading()\n      })},\n\n    hideLoad(){\n        //遍历所有图表组件实例，调用隐藏加载\n       Object.keys( this.$refs).forEach(key => {\n        this.$refs[key].hideLoading()\n      })\n    },\n    //饼图选择事件\n    indexChange(event){\n        console.log(\"选择饼图:\"+event.name)\n\n        //获取已经选择的指标，没有就是默认平均分\n        let now=\"平均分\";\n        //获取那个是选择了的,\n        for(let index in event.selected)\n        {\n          if(event.selected[index]==true)\n          {\n            now=index;\n          }\n        }\n\n        console.log(\"选择的指标:\"+now)\n        this.nowIndex=now;\n        //更新设置班级top图表\n        this.set_classtop()\n    },\n\n    //设置班级图表top数据\n    set_classtop(){\n     console.log(\"设置班级top数据:\"+this.nowIndex)\n      let chart = this.$refs['classtop'];\n      \n      if(Object.keys(this.data['top']).indexOf(this.nowIndex)==-1)\n      {\n        console.warn(\"设置班级top图失败,\"+this.nowIndex+\"不存在\")\n        return;\n      }\n      let classes = this.data['top'][this.nowIndex]['classes']\n      let names = [];\n      let scores = [];\n      classes.forEach(element => {\n        names.push(element['name'])\n        scores.push(element['score'])\n        \n      });\n      // 倒序，这样显示柱子就是从大到小\n      names=names.reverse()\n      scores = scores.reverse();\n\n      //查看当前选择的饼图，饼图选择是什么就显示对应的数据\n      let option= {\n        title: { text: `${this.stateStore.year} 年度 ${this.stateStore.termName()} ${this.nowIndex} TOP5班级` },\n        tooltip:{},\n       \n        grid:{\n          left:'20%'\n        },\n        xAxis: {\n          type:\"value\",\n          name:\"分数\",\n          boundaryGap :false,\n          axisTick:{\n            interval :0\n          },\n          axisLabel:{\n            interval:0\n          }\n\n        },\n        yAxis: {\n          name:\"班级\",\n          type:\"category\",\n          data: names\n\n        },\n        series: {\n          type: \"bar\",\n          data: scores\n\n        }\n      }\n      chart.mergeOptions(option);\n      \n    },\n    //区间图表\n    set_range(){\n      let ranges = this.data['range']['ranges']\n      let term1_scores = this.data['range']['term1_scores']\n      let term2_scores = this.data['range']['term2_scores']\n      let option = {\n        tooltip:{\n          formatter:function (params) {\n            let dataIndex= params.dataIndex;\n            let color=params.color;\n            return `<div style=\"color:${color}\">▲</div>第一学期:`+term1_scores[dataIndex]+`<div style=\"color:${color}\">▼</div>第二学期:`+term2_scores[dataIndex]+`<div style=\"color:${color}\">●</div>总和:`+(term1_scores[dataIndex]+term2_scores[dataIndex])\n            \n          }\n        },\n          title:{text:`${this.stateStore.year} 年度综合素质总分各区间分布`},\n          xAxis:{\n            data:ranges,\n            name:\"分数区间\",\n            axisLabel:{\n              interval:0\n            }\n          },\n          yAxis:{\n            name:\"个数/人\"\n          },\n          legend:{\n            right:0\n          },\n          series:[\n           { \n             stack:\"总和\",\n\n             name:\"第一学期\",\n             type:\"bar\",\n            data:term1_scores\n           },\n           { \n\n             stack:\"总和\",\n             name:\"第二学期\",\n             type:\"bar\",\n            data:term2_scores\n           }\n          ]\n      }\n\n      this.$refs['range'].mergeOptions(option)\n\n    },\n  //gpa成绩关系\n    set_gpa_score(){ \n   \n      let gpa_scores = []\n      for(let i =0 ;i<this.data['gpa_score']['gpas'].length;i+=1)\n      {\n        gpa_scores.push([\n          this.data['gpa_score']['gpas'][i],\n          this.data['gpa_score']['scores'][i]\n        ])\n      }\n      let option={\n          backgroundColor:\"white\",\n        tooltip:{},\n       title: { text:\"GPA成绩与综合素质总分的关系\" },\n        xAxis: {\n          name:\"GPA\"\n        },\n        yAxis: {\n          name:\"综合素质总分\"\n        },\n        series: {\n          type: \"scatter\",\n          data: gpa_scores\n        }\n        }\n    this.$refs['gpa_score'].mergeOptions(option)\n    },\n    // 设置趋势图\n    set_trend(){\n\n      let chart = this.$refs['trend']\n      let option={\n         backgroundColor:\"white\",\n        tooltip:{},\n         title:{text:\"学院各年平均分变化\"},\n      xAxis:{\n        name:\"年度\",\n        boundaryGap:false,\n        data:this.data['trend']['years'],\n      },\n      yAxis:{\n        name:\"综合平均分\"\n      },\n      legend:{},\n      series:\n      [\n       {\n         stack:\"年度\",\n         name:\"第一学期\",\n         type:'line',\n         data:this.data['trend']['term1'],\n         areaStyle:{\n         }\n       },\n       {\n         stack:\"年度\",\n         name:\"第二学期\",\n         type:'line',\n         data:this.data['trend']['term2'],\n         areaStyle:{\n         }\n       }\n      ]\n      }\n      \n      chart.mergeOptions(option)\n    },\n    //各个指标测评分均分（饼图联动）\n    setIndex()\n    {\n      console.log(\"setIndex:设置饼图\")\n      let piedata = [];\n      for(let i =0;i<this.data.indexes.indexes.length;i+=1)\n      {\n        // 不要平均分的\n        if(this.data.indexes.indexes[i]==\"平均分\")\n        continue\n        piedata.push({\n          name:this.data.indexes.indexes[i],\n          value:this.data.indexes.scores[i]\n        })\n      }\n      let option={ \n        tooltip:{},\n  \n        title: { text: `${this.stateStore.year} 年度 ${this.stateStore.termName()}  各项指标平均分数` },\n        series: {\n             label:{\n          show:true,\n           formatter:\"{b}({d}%)\"\n        },\n          type: \"pie\",\n          // 单选模式\n          selectedMode:\"single\",\n          // 思想政治\t身心健康\t创新创业\t技术技能\t志愿服务\t人文艺术\t综合素质理论\n          data:piedata\n        }}\n      let chart=this.$refs['index']\n      chart.mergeOptions(option)\n\n    }\n  },\n  computed:{\n    //表格的数据，用计算属性 , nowIndex改变，这里的也会改变\n    studenttop50()\n    {\n      console.log(\"更新Top 50 表格:now index:\"+this.nowIndex)\n      if(  Object.keys( this.data['top']).indexOf( this.nowIndex)==-1 )\n      {\n        console.log(\"当前指标不存在:\"+this.nowIndex);\n        return;\n      }\n      // 如果没有，一开始没请求数据时是没有的\n       let students = this.data['top'][this.nowIndex]['students']\n       return students;\n    }\n  },\n  data() {\n    return {\n      //当前饼图的选择\n      nowIndex:\"平均分\",\n      stateStore:store.state,\n      //学院数据,默认是测试数据\n      data:college\n\n    };\n  }\n};\n</script>\n\n<style scoped>\n/* 卡片文字样式 */\n.cardtext {\ncolor:red;font-size:30px;\n}\n.chart {\nwidth: 100%;\n}\n</style>"]}]}