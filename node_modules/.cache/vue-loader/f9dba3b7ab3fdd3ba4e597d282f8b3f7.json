{"remainingRequest":"/Users/liuzhaolun/WebstormProjects/Tencent/website/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/liuzhaolun/WebstormProjects/Tencent/website/src/components/Logo.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/liuzhaolun/WebstormProjects/Tencent/website/src/components/Logo.vue","mtime":1576552647000},{"path":"/Users/liuzhaolun/WebstormProjects/Tencent/website/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liuzhaolun/WebstormProjects/Tencent/website/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/liuzhaolun/WebstormProjects/Tencent/website/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liuzhaolun/WebstormProjects/Tencent/website/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Logo.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwfile":"Logo.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"logo\" v-loading.fullscreen=\"loading\">\n    <el-row>\n      <el-col :span=\"12\" :xs=\"24\">\n        \n          <img @click=\"home\" style=\"width: 400px; \" src=\"logo.jpg\" />\n        <div v-if=\"showSelect\" style=\"display:inline;font\">{{collegename}}</div>\n        \n        \n      </el-col>\n      <!-- showSelect 变量来控制是否隐藏 -->\n      <el-col :span=\"12\" :xs=\"24\">\n      <el-row  v-if=\"showSelect\" type=\"flex\" justify=\"end\" >\n        \n        <!-- 如果年度数据为0，就是没有年度数据，显示按钮请求数据重新请求导航数据 -->\n        <el-button @click=\"requestNav\" v-if=\"years.length==0\">请求导航数据</el-button>\n        <!-- 年度选择 -->\n        <el-select v-model=\"year\" v-on:change=\"selectYear\">\n          <el-option v-for=\"item in years\" :key=\"item\" :label=\"item + '年度'\" :value=\"item\"></el-option>\n        </el-select>\n\n        <!-- 学期选择 -->\n        <el-select v-model=\"term\" v-on:change=\"selectYear\">\n          <el-option\n            v-for=\"item in terms\"\n            :key=\"item.value\"\n            :label=\"item.label\"\n            :value=\"item.value\"\n          ></el-option>\n        </el-select>\n\n        <el-cascader placeholder=\"进入班级界面\" :options=\"classes\" @change=\"intoClass\"></el-cascader>\n      </el-row>\n      </el-col>\n\n    </el-row>\n  </div>\n</template>\n\n<script>\nimport { store } from \"../store.js\";\nimport { college } from \"../api/testdata\";\nimport { EventBus } from \"../event-bus.js\";\nimport { get, post } from \"../api/http.js\";\nimport { apiLogin, apiLogoNav } from \"../api/api.js\";\nimport { ClassData } from \"../api/testclassdata.js\";\nimport { StudentData } from \"../api/teststudent\";\nimport { arrayFill } from \"../utils/tools.js\";\nexport default {\n name:'app-logo',\n mounted(){\n      EventBus.$on(\"hideLogo\",(show)=>{\n            console.log(\"接受是否loggo:\"+show)\n            this.showSelect=show;\n        })\n        EventBus.$on(\"requestData\",(from)=>{\n            console.log(`来自:${from}的请求重新加载数据事件`)\n            // 先请求导航里的数据\n            this.requestNav()\n        })\n },\n  //请求年度数据，顺便验证登录\n  created(){\n   \n    console.log(\"创建logo组件.......\")\n    \n    this.$router.afterEach((to,from)=>{\n      console.log(\"全局after each\")\n      //跳转到某个路由后，更新数据\n    })\n    this.$router.beforeEach((to, from, next) => {\n      console.log(\"Logo.vue beforeEach.....\" + this.$router.currentRoute.name);\n      next();\n    });\n  },\n  computed: {\n    // 获取学院名字\n    collegename()\n    {\n      console.log(\"获取学院名字...\")\n      console.log(this.$route.params)\n      if(Object.keys(this.$route.params).indexOf(\"collegeid\")!=-1)\n      {\n      return this.$route.params['collegeid'];\n      }\n      else\n      return \"\"\n    }\n\n  },\n  beforeRouteEnter(to, from, next) {\n    console.log(\"beforeRouteEnter....\");\n    console.log(to);\n  },\n  methods: {\n    // 请求导航数据,包括所有年度和班级列表\n    requestNav() {\n      // 显示全局加载条\n      this.loading = true;\n      // 学年数据,包括所有年份,这个年度的所有班级，\n      apiLogoNav({\n        college:this.collegename\n      })\n        .then(res => {\n          this.loading = false;\n          //请求成功有，设置图表\n          console.log(\"请求logo导航数据成功!!\");\n          console.log(res);\n          // 设置班级的数据\n          arrayFill(this.classes, res.data.classes);\n          // 设置年度选择框的数据\n          arrayFill(this.years, res.data.years);\n          console.log(\"组件的班级...\");\n          console.log(this.classes);\n          // 默认选择请求到的年的第0个\n          this.year = this.years[0];\n          // 请求学院或者班级的数据\n          this.selectYear();\n        })\n        .catch(err => {\n          this.loading = false;\n          this.showFailDialog(\"加载年度和班级列表数据失败!!\", this.requestNav);\n          // 加载失败也继续 请求数据\n          this.selectYear();\n        });\n    },\n    //跳转到首页\n    home() {\n      this.$router.push({\n        name: \"data\"\n      });\n    },\n    // 班级选择器的回调事件\n    intoClass(value, value2) {\n      console.log(\"进入班级:\" + value);\n      // 组成完整的id\n      let id = value.join(\"\");\n    // 刷新班级时替换路由参数\n       this.$route.params[\"classid\"]=id;\n      this.$router.push({\n        name: \"class\",\n        params: {\n          classid: id\n        }\n      });\n      //this.selectYear()\n    },\n    //请求数据\n    //选择年度 或者 学期事件 ,具体请求哪个数据，根据当前的路由决定\n    selectYear() {\n      this.showSelect = true;\n      console.log(\"当前路由:\");\n      console.log(this.$router.currentRoute);\n      //根据当前路由的不同，请求不同的数据\n      console.log(\"选择的year:\" + this.year + \" term:\" + this.term);\n      store.setYear(this.year);\n      store.setTerm(this.term);\n      this.loading = true;\n      //模拟延迟\n        if (this.$router.currentRoute.name == \"college\") {\n          this.requestCollege();\n        } else if (this.$router.currentRoute.name == \"class\") {\n          //获取当前路由的参数，传给请求数据函数\n          let classid = this.$router.currentRoute.params[\"classid\"];\n\n          this.requestClass(classid);\n        } else if (this.$router.currentRoute.name == \"student\") {\n          \n          this.requestStudent(\n            this.$router.currentRoute.params[\"studentid\"],\n            this.$router.currentRoute.params[\"classid\"]\n          );\n        }\n        //什么都不是\n        //选择的\n        else {\n          this.loading = false;\n        }\n      },\n    // 显示加载失败对话框,各个界面的统一使用,retryCallback为点击重试按钮后重新执行的函数\n    showFailDialog(message, retryCallback) {\n      this.$confirm(message, \"加载数据失败\", {\n        confirmButtonText: \"重试\",\n        cancelButtonText: \"显示测试数据\",\n        callback: action => {\n          console.log(\"开始重试...\");\n          console.log(action);\n          // 如果点击了重试按钮\n          if (action == \"confirm\") {\n            if (retryCallback != undefined) retryCallback();\n          }\n        }\n      });\n    },\n    requestCollege() {\n\n      post(\"/api/collage\", {\n        college:this.collegename,\n        year: store.state.year,\n        term: store.state.term\n      })\n        .then(res => {\n          console.log(\"请求学院数据成功:..\");\n          console.log(res);\n          this.loading = false;\n          // 测试数据和请求的后台数据结构一样，直接合并，后台有的直接替换，没有的显示为测试数据\n          Object.assign(college, res);\n          EventBus.$emit(\"collegeDataLoad\", college);\n        })\n        .catch(err => {\n          console.warn(\"请求学院界面数据失败,发送测试数据...>>>\");\n    \n          this.showFailDialog(\"获取学院数据失败:\\n\" + err, this.selectYear);\n          //设置成测试数据\n          //发送事件\n          this.loading = false;\n          // 请求失败也显示测试数据\n          EventBus.$emit(\"collegeDataLoad\", college);\n        });\n    },\n    requestClass(classid) {\n      console.log(\"-------------------请求班级数据------------------\");\n      post(\"/api/banji\", {\n        college:this.collegename,\n        classid: classid,\n        year: store.state.year,\n        term: store.state.term\n      })\n        .then(res => {\n          console.log(\"请求班级数据:..\");\n          console.log(res);\n          this.loading = false;\n          Object.assign(ClassData, res);\n          EventBus.$emit(\"classDataLoad\", ClassData);\n        })\n        .catch(err => {\n          console.log(\"请求数据失败>>>\");\n          console.log(err);\n          //设置成测试数据\n          //发送事件\n          this.loading = false;\n          EventBus.$emit(\"classDataLoad\", ClassData);\n          this.showFailDialog(\"获取班级数据失败:\\n\" + err, this.selectYear);\n        });\n    },\n    requestStudent(studentid, classid) {\n      console.log(\"请求学生数据....\");\n      console.log(this.$route.params);\n\n            post(\"/api/geren\",{\n              college:this.collegename,\n              stu_id:studentid,year:store.state.year,term:store.state.term,classid:classid}).then(res=>{\n              console.log(\"请求个人的数据:..\")\n              console.log(res)\n              console.log(typeof res)\n              \n              \n               this.loading=false\n               //StudentData\n               Object.assign(StudentData,res)\n              EventBus.$emit(\"studentDataLoad\",StudentData)\n            }).catch(err=>{\n            this.$alert(err,\"服务器响应失败\",{\n            confirmButtonText:\"确定\"\n          })\n              console.log(\"请求数据失败>>>----------\")\n              console.log(err)\n              this.showFailDialog(\"获取学生数据失败:\\n\"+err,this.selectYear)\n               this.loading=false\n              //设置成测试数据\n             EventBus.$emit(\"studentDataLoad\",StudentData)\n            })\n        }\n    \n  },\n  data() {\n    return {\n      //是否显示选择框\n      showSelect: false,\n      loading: false,\n      year: store.state.year,\n      term: store.state.term,\n      // 班级\n      classes: [\n        {\n          label: \"17\",\n          value: \"17\",\n          children: [\n            { label: \"大数据\", value: \"bigdata\" },\n            { label: \"云计算\", value: \"clound\" }\n          ]\n        },\n        {\n          label: \"18\",\n          value: \"18\",\n          children: [\n            { label: \"大数据\", value: \"bigdata\" },\n            { label: \"云计算\", value: \"clound\" }\n          ]\n        }\n      ],\n\n      years: [],\n      terms: [\n        {\n          value: \"term1\",\n          label: \"第一学期\"\n        },\n        {\n          value: \"term2\",\n          label: \"第二学期\"\n        },\n        {\n          value: \"year\",\n          label: \"年度\"\n        }\n      ]\n    };\n  }\n};\n</script>\n\n<style scoped>\n</style>"]}]}