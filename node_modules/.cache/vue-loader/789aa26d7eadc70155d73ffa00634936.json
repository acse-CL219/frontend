{"remainingRequest":"/Users/liuzhaolun/WebstormProjects/Tencent/website/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/liuzhaolun/WebstormProjects/Tencent/website/src/views/Data.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/liuzhaolun/WebstormProjects/Tencent/website/src/views/Data.vue","mtime":1576552647000},{"path":"/Users/liuzhaolun/WebstormProjects/Tencent/website/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liuzhaolun/WebstormProjects/Tencent/website/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/liuzhaolun/WebstormProjects/Tencent/website/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liuzhaolun/WebstormProjects/Tencent/website/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Data.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6KA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Data.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div>\n    <el-row>\n      <el-col>\n             <el-select @change=\"openCollege\" v-model=\"selectCollege\"  placeholder=\"打开可视化界面\">\n                <el-option v-for=\"college in storeState.colleges\" :key=\"college\" :label=\"college\" :value=\"college\"></el-option>\n              </el-select>\n  <!-- <router-link :to=\"{name:'college'}\"> <el-button @click=\"truncateFiles\">跳转到可视化界面</el-button>  </router-link> -->\n         <el-button @click=\"truncateFiles\">一键清空表</el-button>\n      </el-col>\n    </el-row>\n    <!--  -->\n    <el-row :gutter=\"40\">\n      <!-- 上传接口1  -->\n      <el-col :span=\"10\"  v-if=\"false\">\n        <el-card>\n          <div slot=\"header\">\n            <span>综合素质数据文件管理</span>\n\n            <!-- 设置在右边 -->\n            <el-date-picker\n              style=\"float:right;\"\n              @change=\"changeYear\"\n              v-model=\"year\"\n              type=\"year\"\n              placeholder=\"选择学年度\"\n            ></el-date-picker>\n            <div style=\"float:right;\">选择指定年度的数据</div>\n          </div>\n\n          <div>数据文件管理，每个年度对应三个年级,每个年级2个学期，共6个数据文件</div>\n          <!-- 显示全部的表格 -->\n          <el-table :data=\"files\" :row-class-name=\"fileStateClassName\">\n            <!-- 指定列 -->\n            <el-table-column label=\"学院\" prop=\"college\"></el-table-column>\n            <el-table-column label=\"年度\" prop=\"year\"></el-table-column>\n            <el-table-column :formatter=\"formatGrade\" label=\"年级\" prop=\"grade\"></el-table-column>\n            <el-table-column :formatter=\"formatTerm\" label=\"学期\" prop=\"term\"></el-table-column>\n            <el-table-column label=\"记录数\" prop=\"count\"></el-table-column>\n            <el-table-column :formatter=\"formatState\" label=\"状态\" prop=\"state\"></el-table-column>\n            <!-- 设置每一行都有的操作 -->\n            <el-table-column label=\"操作\">\n              <!-- 通过scope.row可以获取到表格的某行数据 -->\n              <template slot-scope=\"scope\">\n                <el-upload\n                  :on-success=\"uploadOk\"\n                  :on-error=\"uploadNotOk\"\n                  action=\"/api/data/upload\"\n                  :data=\"getUploadPostData(scope.row)\"\n                  :show-file-list=\"false\"\n                >\n                  <el-button type=\"text\">上传数据</el-button>\n                </el-upload>\n                <el-button\n                  v-if=\"scope.row.state==1\"\n                  type=\"text\"\n                  @click=\"parseFile(scope.row)\"\n                >解析数据到数据库</el-button>\n                <el-button type=\"text\" @click=\"deleteFile(scope.row)\">删除记录</el-button>\n              </template>\n            </el-table-column>\n          </el-table>\n        </el-card>\n      </el-col>\n\n<!-- 上传接口2 -->\n      <el-col :span=\"14\" :xs=\"20\">      \n        <el-card>\n          <div slot=\"header\">\n            <span>已经上传的数据</span>\n            <div style=\"float:right\">\n              <div style=\"display:inline;padding-right:20px;\" >用户名:{{storeState.login.username}}</div>\n              <el-button type=\"success\" @click=\"qiandao\">每日签到领金币</el-button>\n              <!-- 修改密码 -->\n              <el-button type=\"warning\" @click=\"dialogVisible = true\">修改登录密码</el-button>\n              <el-dialog title=\"提示\"\n                        :visible.sync=\"dialogVisible\"\n                        width=\"30%\"\n                        :before-close=\"handleClose\">\n                          <el-form size=\"medium\">\n                        <el-form-item  label=\"原密码\" prop=\"password1\">\n                    <el-input placeholder=\"原密码\" v-model=\"reg.password1\" show-password> </el-input>\n                    </el-form-item>\n                    <el-form-item  label=\"新密码\" prop=\"password2\">\n                    <el-input placeholder=\"密码\" v-model=\"reg.password2\" show-password> </el-input>\n                </el-form-item>\n                <el-form-item   label=\"确认新密码\" prop=\"password3\">\n                    <el-input placeholder=\"密码\" v-model=\"reg.password3\" show-password> </el-input>\n                </el-form-item>\n                          </el-form>\n\n                        <span slot=\"footer\" class=\"dialog-footer\">\n                        <el-button @click=\"dialogVisible = false\">取 消</el-button>\n                        <el-button type=\"primary\" @click=\"changgg\">确 定</el-button>\n                        </span>\n                        </el-dialog>\n              <el-button type=\"danger\" @click=\"logout\">退出登录</el-button>\n               </div>\n            \n            \n          </div>\n          <span>上传新数据</span>\n\n          <el-row>\n                <el-col :span=\"4\">\n              <el-select v-model=\"upload.college\" placeholder=\"选择学院\">\n                <el-option v-for=\"college in storeState.colleges\" :key=\"college\" :label=\"college\" :value=\"college\"></el-option>\n              </el-select>\n            </el-col>\n            <!-- 选择年度 -->\n            <el-col :span=\"4\">\n              \n              <el-date-picker v-model=\"upload.year\" type=\"year\" placeholder=\"选择年度\"></el-date-picker>\n            </el-col>\n            <el-col :span=\"4\">\n              <el-select v-model=\"upload.grade\" type=\"year\" placeholder=\"选择年级\">\n                <el-option\n                  :label=\"year.label\"\n                  :value=\"year.value\"\n                  v-for=\"year in uploadYears\"\n                  :key=\"year.value\"\n                ></el-option>\n              </el-select>\n            </el-col>\n            <el-col :span=\"4\">\n              <el-select v-model=\"upload.term\">\n                <el-option label=\"第一学期\" value=\"term1\"></el-option>\n                <el-option label=\"第二学期\" value=\"term2\"></el-option>\n              </el-select>\n            </el-col>\n            <el-col :span=\"12\">\n              <el-upload\n                :limit=\"1\"\n                :multiple=\"false\"\n                ref=\"uploadNew\"\n                :auto-upload=\"false\"\n                :data=\"uploadData\"\n                action=\"/api/data/upload\"\n                :on-success=\"uploadOk\"\n                :on-error=\"uploadNotOk\"\n                :on-change=\"uploadChange\"\n                \n              >\n                <el-button slot=\"trigger\">选择对应的Excel文件</el-button>\n                <el-button @click=\"submitUploadNew\">上传数据</el-button>\n              </el-upload>\n            </el-col>\n          </el-row>\n\n          <el-table :data=\"uploaded\" :row-class-name=\"fileStateClassName\">\n            <el-table-column label=\"学院\" prop=\"college\"></el-table-column>\n            <el-table-column label=\"年度\" prop=\"year\"></el-table-column>\n            <el-table-column :formatter=\"formatGrade\" label=\"年级\" prop=\"grade\"></el-table-column>\n            <el-table-column  :formatter=\"formatTerm\" label=\"学期\" prop=\"term\"></el-table-column>\n            <el-table-column  :formatter=\"formatState\" label=\"状态\" prop=\"state\"></el-table-column>\n            <el-table-column label=\"操作\">\n              <template slot-scope=\"scope\">\n                <el-button @click=\"deleteFile(scope.row)\">删除数据</el-button>\n                <el-button v-if=\"scope.row.state==1\" @click=\"parseFile(scope.row)\">解析数据</el-button>\n              </template>\n            </el-table-column>\n          </el-table>\n        </el-card>\n\n    \n\n\n      </el-col>\n    </el-row>\n  </div>\n</template>\n\n<script>\nimport {\n  apiParse,\n  apiTruncate,\n  apiFiles,\n  apiDelete,\n  apiUploaded\n} from \"../api/dataApi.js\";\n\nimport { Loading } from \"element-ui\";\nimport { arrayFill ,errorDialog } from \"../utils/tools.js\";\nimport {apiLogout,apiUserInfo,apiUserchange} from '../api/api.js'\nimport {store} from '../store.js'\nimport { college } from '../api/testdata';\n\nexport default {\n  // 组件名称,在调试时有用\n  name: \"datamanage\",\n\n\n  data() {\n    return {\n      selectCollege:\"\",\n      \n      reg:{\n         password1:\"\",\n         password2:\"\",\n         password3:\"\",\n      },\n      dialogVisible: false,\n      storeState:store.state,\n      // 接口2的 用来和选择框\n      upload: {\n        // 这个选择后变成Date对象\n        year: \"\",\n        grade: \"\",\n        term: \"\",\n        college:\"大数据与人工智能学院\"\n      },\n      // 上传文件时附带的数据,点击上传后根据upload对象里的各个值设置uploadData的内容再提交\n      uploadData: {},\n      // 已上传的数据列表\n\n      uploaded: [],\n      // 接口1\n      // 当前选择的日期，默认选择2019年度的\n      year: new Date(2019, 11, 11),\n      // 没数据时显示的测试\n      files: [\n        {\n          college: \"测试\",\n          year: \"2018\"\n        }\n      ]\n      \n    };\n  },\n\n  // 组件created时请求2019的数据\n  created() {\n           console.log(\"组件创建...\")\n    // 请求用户信息\n    apiUserInfo().then(res=>{\n      console.log(\"获取用户登录信息...\")\n      console.log(res)\n    //  设置用户信息\n    console.log(\"设置用户名:\"+res.data.username)\n    store.setUserName(res.data.username);\n    }).catch(err=>{\n      console.log(\"获取用户信息出错:\")\n      console.log(err)\n    })\n    // 请求两个接口的数据\n    this.switchYear(2019);\n    this.requestUpload();\n \n  },\n  computed: {\n    // 选择某个年度后，学期也是确定的,2017年度只有三个学期 17级16级15级\n    uploadYears() {\n      if (this.upload.year === \"\") return [];\n      console.log(this.upload.year + typeof this.upload.year);\n      let year = this.upload.year.getFullYear();\n      let result = [];\n      for (let j = year; j > year - 3; j -= 1) {\n        result.push({\n          label: j + \"级\",\n          value: j + \"\"\n        });\n      }\n\n      return result;\n    }\n  },\n  methods: {\n    openCollege(value)\n    {\n      console.log(\"打开学院:\",value)\n      this.$router.push({\n        name:\"college\",\n        params:{\n          collegeid:value\n        }\n        \n\n      })\n    },\n    qiandao(){\n      this.$message({\n        message:\"签到成功,金币+10\",\n        type:\"warning\"\n      })\n    },\n    \n    changgg(){\n      if(this.reg.password2!=this.reg.password3){\n        this.$message({\n          showClose: true,\n          message: '密码不一致',\n          type: 'error'\n        });\n        return\n      }\n      this.dialogVisible=false\n      console.log(\"调用监听修改密码\")\n      apiUserchange({\n          username:this.storeState.login.username,\n          old_password:this.reg.password1,\n          password:this.reg.password2,\n          password2:this.reg.password3,\n      }).then(res=>{\n        \n        console.log(\"请求成功..\")\n        console.log(res)\n        if(res.code==0)\n        {\n        this.$message({\n          showClose: true,\n          message: '密码修改成功,跳转到登录界面',\n          type: 'success'\n        });\n        this.$router.push({\n          name:'login'\n        })\n        }\n        else\n        this.$message({\n          showClose: true,\n          message: '密码失败:'+res.msg,\n          type: 'error'\n        });\n      }).catch(err=>{\n        console.log(\"请求失败.\")\n      })\n    },\n      handleClose(done) {\n        this.$confirm('确认关闭？')\n          .then(_ => {\n            done();\n          })\n          .catch(_ => {});\n      }\n    ,\n    logout(){\n      apiLogout().then(res=>{\n        if(res.code==0){\n        this.$message({\n          message:\"登出成功!\"\n        })\n        this.$router.push({\n          name:'login'\n\n        })\n        }\n        else{\n            errorDialog(this,res.msg)\n        }\n      }).catch(err=>{})\n\n    },\n    // 接口1 提交数据\n    submitUploadNew() {\n      console.log(\"上传数据...\");\n      if(this.upload.year==\"\"){\n        this.$message(\"年度没有选择!!\")\n        return\n      }\n      // 设置附加参数\n      this.uploadData[\"year\"] = this.upload.year.getFullYear();\n      this.uploadData[\"grade\"] = this.upload.grade;\n      this.uploadData[\"term\"] = this.upload.term;\n      this.uploadData[\"college\"] = this.upload.college;\n      this.$refs.uploadNew.submit();\n    },\n    // 获取已上传数据\n    requestUpload() {\n      apiUploaded()\n        .then(res => {\n          console.log(\"获取已上传的数据:\");\n          console.log(res);\n          if(res.code==0)\n          arrayFill(this.uploaded, res.data);\n          else\n          this.$alert(res.data,\"失败\",{\n            confirmButtonText:\"确定\"\n          })\n        })\n        .catch(err => {\n          console.log(\"获取已上传的数据失败\");\n        });\n    },\n    // 格式化年级输出，2017只输出 17级这样的\n    formatGrade(row, column, cellValue, index) {\n      if(!cellValue)return \"null\"\n      if (cellValue.length == 4) return cellValue.substring(2, 4) + \"级\";\n      else return cellValue;\n    },\n    // 格式化学期输出\n    formatTerm(row,column,cellValue,index){\n      if(cellValue==\"term1\")return \"第一学期\"\n      else if(cellValue==\"term2\")return \"第二学期\"\n      else\n      return cellValue\n    },\n    // 格式化状态码,将数字转换成文字\n    formatState(row,column,cellValue,index){\n        if(cellValue==0)\n        return \"未上传\"\n        else if(cellValue==1)\n        return \"未解析\"\n        else if(cellValue==2)\n        return \"解析完成\"\n    },\n    // 清空表，测试使用\n    truncateFiles() {\n      apiTruncate()\n        .then(res => {\n          console.log(\"清空表成功..\");\n          this.switchYear(this.year.getFullYear());\n        })\n        .catch(err => {\n          console.log(\"清空表失败..\");\n        });\n    },\n    // 清空数据，清空某个文件的数据，并删除文件\n    deleteFile(param) {\n      let postparam = {\n        // 学年\n        year: param.year,\n        // 年级\n        grade: param.grade,\n        // 学期\n        term: param.term,\n        college:param.college\n      };\n       Loading.service({ text: \"删除数据文件和数据库里的记录....\", fullscreen: true });\n      apiDelete(postparam)\n        .then(res => {\n              Loading.service({ fullscreen: true }).close();\n          console.log(\"ffff\")\n          console.log(res)\n         \n          if(res.code==0){\n          this.$message({ type: \"success\", message: \"清空数据成功:\"+res.msg });\n          // 删除成功刷新数据\n          this.switchYear(this.year.getFullYear());\n          }\n          else\n          {\n            this.$alert(res.msg, \"删除数据失败\", {\n            confirmButtonText: \"确定\"\n          });\n          }\n        })\n        .catch(err => {\n              Loading.service({ fullscreen: true }).close();\n          console.log(err)\n          this.$alert(err.data, \"服务器响应失败,清空数据失败\", {\n            confirmButtonText: \"确定\"\n          });\n        });\n    },\n    // 解析文件,post解析数据的路由\n    parseFile(param) {\n      console.log(\"解析数据:\");\n      console.log(param);\n      // 时间较长，显示全屏进度条\n      Loading.service({ text: \"解析数据到数据库中....\", fullscreen: true });\n      let postparam = {\n        // 学年\n        year: param.year,\n        // 年级\n        grade: param.grade,\n        // 学期\n        term: param.term,\n        college:param.college\n      };\n      apiParse(postparam)\n        .then(res => {\n          // 请求完成，关闭进度条\n          Loading.service({ fullscreen: true }).close();\n          console.log(res);\n          // 返回200,再判断错误无码\n          if (res.code != 0) {\n            this.$alert(res.msg, \"服务器响应上传失败\", {\n              confirmButtonText: \"确定\"\n            });\n          } else {\n            this.$message({ type: \"success\", message: \"解析成功\" });\n          }\n          this.switchYear(this.year.getFullYear());\n        })\n        .catch(err => {\n            this.$alert( \"捕捉到异常:\"+err,\"解析错误\", {\n              confirmButtonText: \"确定\"\n            });\n          Loading.service({ fullscreen: true }).close();\n        });\n    },\n    \n    // 上传成功回调\n    //提示消息\n    uploadOk(response, file, fileList) {\n      if (response.code != 0) {\n        this.$alert(response.msg, \"服务器响应上传失败\", {\n          confirmButtonText: \"确定\"\n        });\n      } else {\n        this.$message({\n          type: \"success\",\n          message: \"上传成功\"\n        });\n      }\n      this.switchYear(this.year.getFullYear());\n      this.$refs.uploadNew.clearFiles();\n    },\n    // 上传失败回调\n    uploadNotOk(err, file, fileList) {\n      console.log(\"上传文件不成功...\");\n      console.log(err);\n      this.$alert(err, \"上传失败\", {\n        confirmButtonText: \"确定\"\n      });\n      this.$refs.uploadNew.clearFiles();\n    },\n    // 文件状态改变添加文件，上传成功，上传失败都会调用，这里设置个逻辑，上传成功后尝试解析文件名，获取出年度年级数据\n    uploadChange(file,fileList){\n      console.log(\"文件状态改变:\")\n      console.log(file)\n      console.log(fileList)\n      // 因为都会触发，如果长度是1就是，添加的，上传的fileList变成0\n      if(fileList.length==1)\n      {\n        let name = fileList[0].name\n        console.log(\"添加文件名:\"+name)\n        // 正则查找文件名里的数据\n        let grade_pattern =/(\\d+)级/g\n        let term_pattern= /第(.)学期/g\n        let year_pattern=/(\\d{4})-\\d{4}/g\n        let grade=grade_pattern.exec(name)\n        let term = term_pattern.exec(name)\n        let year = year_pattern.exec(name)\n        console.log(\"尝试在文件名里查找参数:\"+grade)\n        console.log(term)\n        console.log(year)\n        // 如果三个都查找到就切换\n        if(grade.length==2&&term.length==2&&year.length==2)\n        {\n          term = term[1]\n          if(term==\"一\")term=\"term1\"\n          else if(term==\"二\")term=\"term2\"\n          grade=grade[1]\n          year = year[1]\n          this.$message({\n            type:\"success\",\n            message:`文件名里获取年度等数据成功,年度:${year} 年级:${grade} 学期:${term}`\n          })\n          this.upload.grade=grade\n          this.upload.term = term\n          this.upload.year = new Date(year,1,1)\n        }\n        else\n        {\n          this.$message({\n            type:\"error\",\n            message:\"文件名里获取年度等数据失败，请手动选择\"\n          })\n        }\n\n      }\n    },\n    // 接口1-------------------\n    // 获取post时顺便上传上去的数据，上传，el-upload用到，这里提交过去的是表单形式的\n    getUploadPostData(row) {\n      return {\n        year: row.year,\n        grade: row.grade,\n        term: row.term\n      };\n    },\n    // 行的样式，根据状态码的不同显示不同的背景颜色\n    fileStateClassName(row, rowIndex) {\n      if (row.row.state == 0) return \"file-no-upload\";\n      else if (row.row.state == 1) {\n        return \"file-ok\";\n      }\n    },\n    // 改变选择年度时,重新请求数据\n    changeYear(date) {\n      this.switchYear(date.getFullYear());\n    },\n    // 0未上传 1以上\n    switchYear(year) {\n      this.requestUpload();\n      // apiFiles({\n      //   year: year\n      // })\n      //   .then(res => {\n      //     console.log(\"请求文件列表成功...\");\n      //     // 清空原本的表格数据\n      //     this.files.splice(0, this.files.length);\n      //     // 插入请求回来的\n      //     res.forEach(element => {\n      //       this.files.push(element);\n      //     });\n      //   })\n      //   .catch(err => {\n      //     this.$alert(err, \"请求已上传的文件列表失败\", {\n      //       confirmButtonText: \"ok\"\n      //     });\n      //     console.log(\"请求文件列表失败\");\n      //   });\n      console.log(\"选择年份:\" + year);\n      //\n    },\n    // 接口1 上传文件件\n    submitUpload() {\n      this.$refs.upload.submit();\n    }\n    // success() {\n    //   console.log(\"上传数据成功!\");\n    // },\n    // error() {\n    //   this.$message(\"上传数据失败...\");\n    // }\n  }\n};\n</script>\n\n\n<style >\n/* 没上传文件的表格颜色 */\n.el-table .file-no-upload {\n  background: oldlace;\n}\n.el-table .file-ok {\n  background: #f0f9eb;\n}\n</style>"]}]}